/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DisperseGasless,
  DisperseGaslessInterface,
} from "../../../contracts/DisperseGaslessV2.sol/DisperseGasless";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseTokenSimple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cc5380380610cc5833981810160405281019061003291906100ed565b6100418161004760201b60201c565b5061011a565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ba8261008f565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b6000602082840312156101035761010261008a565b5b6000610111848285016100d8565b91505092915050565b610b9c806101296000396000f3fe60806040526004361061004a5760003560e01c806351ba162c1461004f578063572b6c0514610078578063c73a2d60146100b5578063ce1b815f146100de578063e63d38ed14610109575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610834565b610125565b005b34801561008457600080fd5b5061009f600480360381019061009a91906108bf565b610207565b6040516100ac9190610907565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610834565b610260565b005b3480156100ea57600080fd5b506100f3610413565b6040516101009190610931565b60405180910390f35b610123600480360381019061011e919061094c565b61043c565b005b60005b8251811015610201578373ffffffffffffffffffffffffffffffffffffffff166323b872dd33858481518110610161576101606109c4565b5b602002602001015185858151811061017c5761017b6109c4565b5b60200260200101516040518463ffffffff1660e01b81526004016101a293929190610a02565b6020604051808303816000875af11580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610a65565b6101ee57600080fd5b80806101f990610ac1565b915050610128565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000805b83518110156102a8578281815181106102805761027f6109c4565b5b6020026020010151826102939190610b09565b915080806102a090610ac1565b915050610264565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102e693929190610a02565b6020604051808303816000875af1158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610a65565b61033257600080fd5b60005b835181101561040c578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85838151811061036d5761036c6109c4565b5b6020026020010151858481518110610388576103876109c4565b5b60200260200101516040518363ffffffff1660e01b81526004016103ad929190610b3d565b6020604051808303816000875af11580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f09190610a65565b6103f957600080fd5b808061040490610ac1565b915050610335565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60005b82518110156104d65782818151811061045b5761045a6109c4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc83838151811061048f5761048e6109c4565b5b60200260200101519081150290604051600060405180830381858888f193505050501580156104c2573d6000803e3d6000fd5b5080806104ce90610ac1565b91505061043f565b506000479050600081111561052d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561052b573d6000803e3d6000fd5b505b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057182610546565b9050919050565b600061058382610566565b9050919050565b61059381610578565b811461059e57600080fd5b50565b6000813590506105b08161058a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610604826105bb565b810181811067ffffffffffffffff82111715610623576106226105cc565b5b80604052505050565b6000610636610532565b905061064282826105fb565b919050565b600067ffffffffffffffff821115610662576106616105cc565b5b602082029050602081019050919050565b600080fd5b61068181610566565b811461068c57600080fd5b50565b60008135905061069e81610678565b92915050565b60006106b76106b284610647565b61062c565b905080838252602082019050602084028301858111156106da576106d9610673565b5b835b8181101561070357806106ef888261068f565b8452602084019350506020810190506106dc565b5050509392505050565b600082601f830112610722576107216105b6565b5b81356107328482602086016106a4565b91505092915050565b600067ffffffffffffffff821115610756576107556105cc565b5b602082029050602081019050919050565b6000819050919050565b61077a81610767565b811461078557600080fd5b50565b60008135905061079781610771565b92915050565b60006107b06107ab8461073b565b61062c565b905080838252602082019050602084028301858111156107d3576107d2610673565b5b835b818110156107fc57806107e88882610788565b8452602084019350506020810190506107d5565b5050509392505050565b600082601f83011261081b5761081a6105b6565b5b813561082b84826020860161079d565b91505092915050565b60008060006060848603121561084d5761084c61053c565b5b600061085b868287016105a1565b935050602084013567ffffffffffffffff81111561087c5761087b610541565b5b6108888682870161070d565b925050604084013567ffffffffffffffff8111156108a9576108a8610541565b5b6108b586828701610806565b9150509250925092565b6000602082840312156108d5576108d461053c565b5b60006108e38482850161068f565b91505092915050565b60008115159050919050565b610901816108ec565b82525050565b600060208201905061091c60008301846108f8565b92915050565b61092b81610566565b82525050565b60006020820190506109466000830184610922565b92915050565b600080604083850312156109635761096261053c565b5b600083013567ffffffffffffffff81111561098157610980610541565b5b61098d8582860161070d565b925050602083013567ffffffffffffffff8111156109ae576109ad610541565b5b6109ba85828601610806565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6109fc81610767565b82525050565b6000606082019050610a176000830186610922565b610a246020830185610922565b610a3160408301846109f3565b949350505050565b610a42816108ec565b8114610a4d57600080fd5b50565b600081519050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a61053c565b5b6000610a8984828501610a50565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610acc82610767565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610afe57610afd610a92565b5b600182019050919050565b6000610b1482610767565b9150610b1f83610767565b9250828201905080821115610b3757610b36610a92565b5b92915050565b6000604082019050610b526000830185610922565b610b5f60208301846109f3565b939250505056fea2646970667358221220d390101cdd372ff00f6214d00e682b2a5ff5ac0528808354ab83e0197caf8cd564736f6c63430008110033";

type DisperseGaslessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisperseGaslessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisperseGasless__factory extends ContractFactory {
  constructor(...args: DisperseGaslessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DisperseGasless> {
    return super.deploy(
      _trustedForwarder,
      overrides || {}
    ) as Promise<DisperseGasless>;
  }
  override getDeployTransaction(
    _trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_trustedForwarder, overrides || {});
  }
  override attach(address: string): DisperseGasless {
    return super.attach(address) as DisperseGasless;
  }
  override connect(signer: Signer): DisperseGasless__factory {
    return super.connect(signer) as DisperseGasless__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisperseGaslessInterface {
    return new utils.Interface(_abi) as DisperseGaslessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisperseGasless {
    return new Contract(address, _abi, signerOrProvider) as DisperseGasless;
  }
}
