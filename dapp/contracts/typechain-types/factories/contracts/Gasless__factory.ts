/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Gasless, GaslessInterface } from "../../contracts/Gasless";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNumber",
        type: "uint256",
      },
    ],
    name: "changeNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516103b93803806103b9833981810160405281019061003291906100d1565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050506100fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b6100ae81610093565b81146100b957600080fd5b50565b6000815190506100cb816100a5565b92915050565b6000602082840312156100e7576100e661006e565b5b60006100f5848285016100bc565b91505092915050565b6080516102a1610118600039600060c401526102a16000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806307391dd61461004657806323fd0e4014610062578063572b6c0514610080575b600080fd5b610060600480360381019061005b9190610153565b6100b0565b005b61006a6100ba565b604051610077919061018f565b60405180910390f35b61009a60048036038101906100959190610208565b6100c0565b6040516100a79190610250565b60405180910390f35b8060008190555050565b60005481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080fd5b6000819050919050565b6101308161011d565b811461013b57600080fd5b50565b60008135905061014d81610127565b92915050565b60006020828403121561016957610168610118565b5b60006101778482850161013e565b91505092915050565b6101898161011d565b82525050565b60006020820190506101a46000830184610180565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d5826101aa565b9050919050565b6101e5816101ca565b81146101f057600080fd5b50565b600081359050610202816101dc565b92915050565b60006020828403121561021e5761021d610118565b5b600061022c848285016101f3565b91505092915050565b60008115159050919050565b61024a81610235565b82525050565b60006020820190506102656000830184610241565b9291505056fea26469706673582212209f7450792c46d3f89f00a622578865cea3a36fe0d577b7b41bd25eb709a2378764736f6c63430008110033";

type GaslessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gasless__factory extends ContractFactory {
  constructor(...args: GaslessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gasless> {
    return super.deploy(trustedForwarder, overrides || {}) as Promise<Gasless>;
  }
  override getDeployTransaction(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  override attach(address: string): Gasless {
    return super.attach(address) as Gasless;
  }
  override connect(signer: Signer): Gasless__factory {
    return super.connect(signer) as Gasless__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessInterface {
    return new utils.Interface(_abi) as GaslessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gasless {
    return new Contract(address, _abi, signerOrProvider) as Gasless;
  }
}
